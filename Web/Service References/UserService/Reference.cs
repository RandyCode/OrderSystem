//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        OrderManager.Model.DTO.OM_UserDetail Login(string userAccount, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_UserDetail> LoginAsync(string userAccount, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserLogs", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserLogsResponse")]
        System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject> GetCurrentUserLogs(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserLogs", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject>> GetCurrentUserLogsAsync(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPassword", ReplyAction="http://tempuri.org/IUserService/ResetPasswordResponse")]
        void ResetPassword(string cipher, string userGuid, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPassword", ReplyAction="http://tempuri.org/IUserService/ResetPasswordResponse")]
        System.Threading.Tasks.Task ResetPasswordAsync(string cipher, string userGuid, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        void UpdatePassword(string cipher, string userGuid, string oldPwd, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task UpdatePasswordAsync(string cipher, string userGuid, string oldPwd, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserList", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserList(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserList", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserListAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        OrderManager.Model.Models.OM_User GetUser(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.Models.OM_User> GetUserAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveMessageBoard", ReplyAction="http://tempuri.org/IUserService/SaveMessageBoardResponse")]
        bool SaveMessageBoard(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveMessageBoard", ReplyAction="http://tempuri.org/IUserService/SaveMessageBoardResponse")]
        System.Threading.Tasks.Task<bool> SaveMessageBoardAsync(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserMessageBoard", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserMessageBoardResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard> GetCurrentUserMessageBoard(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserMessageBoard", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserMessageBoardResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard>> GetCurrentUserMessageBoardAsync(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMessageBoardModel", ReplyAction="http://tempuri.org/IUserService/GetMessageBoardModelResponse")]
        OrderManager.Model.Models.OM_MessageBoard GetMessageBoardModel(string cipher, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMessageBoardModel", ReplyAction="http://tempuri.org/IUserService/GetMessageBoardModelResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.Models.OM_MessageBoard> GetMessageBoardModelAsync(string cipher, string guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Web.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Web.UserService.IUserService>, Web.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OrderManager.Model.DTO.OM_UserDetail Login(string userAccount, string password) {
            return base.Channel.Login(userAccount, password);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_UserDetail> LoginAsync(string userAccount, string password) {
            return base.Channel.LoginAsync(userAccount, password);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject> GetCurrentUserLogs(string cipher, string userId) {
            return base.Channel.GetCurrentUserLogs(cipher, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject>> GetCurrentUserLogsAsync(string cipher, string userId) {
            return base.Channel.GetCurrentUserLogsAsync(cipher, userId);
        }
        
        public void ResetPassword(string cipher, string userGuid, string newPwd) {
            base.Channel.ResetPassword(cipher, userGuid, newPwd);
        }
        
        public System.Threading.Tasks.Task ResetPasswordAsync(string cipher, string userGuid, string newPwd) {
            return base.Channel.ResetPasswordAsync(cipher, userGuid, newPwd);
        }
        
        public void UpdatePassword(string cipher, string userGuid, string oldPwd, string newPwd) {
            base.Channel.UpdatePassword(cipher, userGuid, oldPwd, newPwd);
        }
        
        public System.Threading.Tasks.Task UpdatePasswordAsync(string cipher, string userGuid, string oldPwd, string newPwd) {
            return base.Channel.UpdatePasswordAsync(cipher, userGuid, oldPwd, newPwd);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserList(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserList(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserListAsync(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserListAsync(cipher, userGuid);
        }
        
        public OrderManager.Model.Models.OM_User GetUser(string cipher, string userGuid) {
            return base.Channel.GetUser(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.Models.OM_User> GetUserAsync(string cipher, string userGuid) {
            return base.Channel.GetUserAsync(cipher, userGuid);
        }
        
        public bool SaveMessageBoard(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard) {
            return base.Channel.SaveMessageBoard(cipher, msgBoard);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMessageBoardAsync(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard) {
            return base.Channel.SaveMessageBoardAsync(cipher, msgBoard);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard> GetCurrentUserMessageBoard(string cipher, string userId) {
            return base.Channel.GetCurrentUserMessageBoard(cipher, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard>> GetCurrentUserMessageBoardAsync(string cipher, string userId) {
            return base.Channel.GetCurrentUserMessageBoardAsync(cipher, userId);
        }
        
        public OrderManager.Model.Models.OM_MessageBoard GetMessageBoardModel(string cipher, string guid) {
            return base.Channel.GetMessageBoardModel(cipher, guid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.Models.OM_MessageBoard> GetMessageBoardModelAsync(string cipher, string guid) {
            return base.Channel.GetMessageBoardModelAsync(cipher, guid);
        }
    }
}
